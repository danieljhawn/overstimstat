server {
        # logic to enable this block before the cert is issued
        {% if letsencrypt_challenge_accepted == false %}
        listen [::]:80 ipv6only=on;
        listen 80;
        {% endif %}
        server_name {{ domain_name }};
        root /var/www/html;

        # Add index.php to the list if you are using PHP
        index index.html index.htm index.nginx-debian.html;

        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            deny all;
        }
        location / {
                proxy_set_header Host $host;
                proxy_set_header X-Forwarded-Host $host;
                proxy_set_header X-Forwarded-Server $host;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection $connection_upgrade;
                proxy_pass http://localhost:8080;
        }
        location /.well-known/acme-challenge {
                root /var/www/html;
                try_files $uri $uri/ =404;
         }

      {% if letsencrypt_challenge_accepted == true %}
        listen [::]:443 ssl ipv6only=on; 
        listen 443 ssl;
        ssl_certificate /etc/letsencrypt/certs/fullchain_{{ domain_name }}; 
        ssl_certificate_key /etc/letsencrypt/keys/{{ domain_name }}.key; 
        # why does certbot include this? why should I too?
        # include /etc/letsencrypt/options-ssl-nginx.conf;
        # ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
      {% endif %}
}

{% if letsencrypt_challenge_accepted == true %}
server {
    if ($host = {{ domain_name }}) {
        return 301 https://$host$request_uri;
    } 


        listen 80 default_server;
        listen [::]:80 default_server;

        server_name {{ domain_name }};
    return 404;
}
{% endif %}
